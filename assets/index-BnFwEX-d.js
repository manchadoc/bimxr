(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const r of t.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function s(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();async function E(){const l=document.createElement("canvas");document.body.appendChild(l);const o=l.getContext("webgl",{xrCompatible:!0}),n=new THREE.Scene,s=new THREE.DirectionalLight(16777215,.3);s.position.set(10,15,10),n.add(s);const e=new THREE.WebGLRenderer({alpha:!0,preserveDrawingBuffer:!0,canvas:l,context:o});e.autoClear=!1;const t=new THREE.PerspectiveCamera;t.matrixAutoUpdate=!1;const r=await navigator.xr.requestSession("immersive-ar",{requiredFeatures:["hit-test"]});r.updateRenderState({baseLayer:new XRWebGLLayer(r,o)});const p=await r.requestReferenceSpace("local"),y=await r.requestReferenceSpace("viewer"),b=await r.requestHitTestSource({space:y}),m=new THREE.GLTFLoader;let i;m.load("https://immersive-web.github.io/webxr-samples/media/gltf/reticle/reticle.gltf",function(a){i=a.scene,i.visible=!1,n.add(i)});let d;m.load("./serc/0.glb",function(a){d=a.scene}),r.addEventListener("select",a=>{if(d){const c=d.clone();c.position.copy(i.position),n.add(c)}});const g=(a,c)=>{r.requestAnimationFrame(g),o.bindFramebuffer(o.FRAMEBUFFER,r.renderState.baseLayer.framebuffer);const w=c.getViewerPose(p);if(w){const u=w.views[0],h=r.renderState.baseLayer.getViewport(u);e.setSize(h.width,h.height),t.matrix.fromArray(u.transform.matrix),t.projectionMatrix.fromArray(u.projectionMatrix),t.updateMatrixWorld(!0);const v=c.getHitTestResults(b);if(v.length>0&&i){const f=v[0].getPose(p);i.visible=!0,i.position.set(f.transform.position.x,f.transform.position.y,f.transform.position.z),i.updateMatrixWorld(!0)}e.render(n,t)}};r.requestAnimationFrame(g)}document.getElementById("fetchButton").addEventListener("click",()=>{E()});
